{"version":3,"sources":["captcha.ts"],"names":[],"mappings":"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","file":"captcha.js","sourcesContent":["\r\nclass GragwarCaptcha {\r\n  public $image: HTMLImageElement;\r\n  public $input: HTMLInputElement;\r\n  public $refreshButton: HTMLButtonElement;\r\n  public $buttonIcon: HTMLSpanElement;\r\n\r\n  constructor(public $element: Element, public options: any = {}) {\r\n    this.$image = this.$element.querySelector('[data-captcha-image]')!;\r\n    this.$input = this.$element.querySelector('[data-captcha-input]')!;\r\n    this.$refreshButton = this.$element.querySelector('[data-captcha-refresh]')!;\r\n    this.$buttonIcon = this.$element.querySelector('[data-refresh-icon]')!;\r\n\r\n    this.$refreshButton.addEventListener('click', () => {\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  refresh() {\r\n    this.$buttonIcon.classList.add('fa-spin');\r\n\r\n    let src = this.$image.dataset.image;\r\n    const t = (new Date).getTime().toString() + '.' + (Math.random() * 10000);\r\n\r\n    if (src.indexOf('?') !== -1) {\r\n      src += '&t=' + t;\r\n    } else {\r\n      src += '?t=' + t;\r\n    }\r\n\r\n    this.$image.addEventListener('load', () => {\r\n      this.$buttonIcon.classList.remove('fa-spin');\r\n      this.$input.value= '';\r\n    }, { once: true });\r\n\r\n    this.$image.src = src;\r\n  }\r\n\r\n  clear() {\r\n    this.$input.value = '';\r\n  }\r\n}\r\n\r\nu.directive('captcha-gregwar', {\r\n  mounted(el) {\r\n    u.module(el, 'captcha.grwgwar', (el) => new GragwarCaptcha(el));\r\n  }\r\n});\r\n\r\nclass RecaptchaCaptcha {\r\n  public key: string | undefined;\r\n  public callbackName: string | undefined;\r\n  public jsVerify: string | undefined;\r\n\r\n  constructor(public el: HTMLElement, public type: string) {\r\n    u.import('https://www.google.com/recaptcha/api.js');\r\n\r\n    this.key = this.el.dataset.key;\r\n    this.callbackName = this.el.dataset.callback;\r\n\r\n    this.jsVerify = this.el.dataset.jsVerify;\r\n\r\n    if (this.jsVerify) {\r\n      const form = this.el.closest('form');\r\n\r\n      if (type === 'invisible') {\r\n        form.addEventListener('submit', (e) => {\r\n          if (form.dataset.passCaptcha) {\r\n            return;\r\n          }\r\n\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          e.stopImmediatePropagation();\r\n\r\n          grecaptcha.execute();\r\n        });\r\n\r\n        window[this.callbackName] = function(response) {\r\n          form.dataset.passCaptcha = 'true';\r\n          form.requestSubmit();\r\n        }\r\n      } else {\r\n        form.addEventListener('submit', (e) => {\r\n          if (form.dataset.passCaptcha) {\r\n            return;\r\n          }\r\n\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          e.stopImmediatePropagation();\r\n\r\n          alert(u.__('luna.field.captcha.message.please.check.first'));\r\n        });\r\n\r\n        window[this.callbackName] = function(response) {\r\n          form.dataset.passCaptcha = 'true';\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nu.directive('captcha-recaptcha', {\r\n  mounted(el, { value }) {\r\n    u.module(\r\n      el,\r\n      'captcha.recaptcha',\r\n      (el) => new RecaptchaCaptcha(el as HTMLElement, value)\r\n    );\r\n  }\r\n});\r\n"]}