{"version":3,"sources":["locale-switch.js"],"names":["System","register","_export","_context","LocaleSwitchModal","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","obj","value","setters","_main","execute","el","options","_this","this","instance","Constructor","TypeError","_classCallCheck","type","table","routeName","currentId","defaultId","inputId","langField","titleField","triggerInputName","assign","buttons","u","each","querySelectorAll","button","e","addEventListener","protoProps","staticProps","input","document","querySelector","form","get","$validation","alert","valid","__","Error","validateForm","post","task","dataset","lang","code","copy","targetId","prototype","directive","mounted","_ref","JSON","parse","module"],"mappings":"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","file":"locale-switch.js","sourcesContent":["/**\n * Part of earth project.\n *\n * @copyright  Copyright (C) 2022 __ORGANIZATION__.\n * @license    __LICENSE__\n */\n\nimport '@main';\n\nexport class LocaleSwitchModal {\n  options = {\n    type: '',\n    table: '',\n    routeName: '',\n    currentId: '',\n    defaultId: '',\n    inputId: '',\n    langField: '',\n    titleField: '',\n    triggerInputName: 'lang_assoc'\n  };\n\n  constructor(el, options) {\n    // the modal element\n    this.el = el;\n    this.options = Object.assign({}, this.options, options);\n\n    let buttons = this.el.querySelectorAll('[data-task=create_lang_version]');\n\n    u.each(buttons, (button) => {\n      button.addEventListener('click', (e) => {\n        this.saveCurrentAndCreateLang(button);\n      });\n    });\n\n    buttons = this.el.querySelectorAll('[data-task=switch_lang]');\n\n    u.each(buttons, (button) => {\n      button.addEventListener('click', (e) => {\n        this.switchLang(button);\n      });\n    });\n  }\n\n  validateForm() {\n    const input = document.querySelector('#' + this.options.inputId);\n\n    const form = input.form;\n\n    const validation = u.$validation.get(form);\n\n    const valid = validation.validateAll();\n\n    if (!valid) {\n      alert(u.__('luna.field.locale.switch.message.form.invalid'));\n      throw new Error('Form invalid');\n    }\n\n    return form;\n  }\n\n  /**\n   * @param {HTMLButtonElement} button\n   */\n  saveCurrentAndCreateLang(button) {\n    const form = this.validateForm();\n\n    u.form(form).post(\n      null,\n      {\n        [this.options.triggerInputName]: {\n          task: 'create',\n          type: this.options.type,\n          table: this.options.table,\n          routeName: this.options.routeName,\n          code: button.dataset.lang,\n          copy: button.dataset.copy,\n          langField: this.options.langField,\n          titleField: this.options.titleField,\n          currentId: this.options.currentId,\n          defaultId: this.options.defaultId\n        }\n      }\n    );\n  }\n\n  /**\n   * @param {HTMLButtonElement} button\n   */\n  switchLang(button) {\n    const form = this.validateForm();\n\n    u.form(form).post(\n      null,\n      {\n        [this.options.triggerInputName]: {\n          task: 'switch',\n          table: this.options.table,\n          routeName: this.options.routeName,\n          targetId: button.dataset.targetId\n        }\n      }\n    );\n  }\n}\n\nu.directive(\n  'locale-switch-modal',\n  {\n    mounted(el, { value }) {\n      const options = JSON.parse(value);\n\n      u.module(el, 'locale.switch', () => new LocaleSwitchModal(el, options));\n    }\n  }\n);\n\n"]}